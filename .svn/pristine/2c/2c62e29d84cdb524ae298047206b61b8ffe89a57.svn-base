package com.babpool.free.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.babpool.attach.dao.IAttachDao;
import com.babpool.attach.vo.AttachVO;
import com.babpool.exception.BizNotEffectedException;
import com.babpool.exception.BizNotFoundException;
import com.babpool.exception.BizPasswordNotMatchedException;
import com.babpool.free.dao.IFreeBoardDao;
import com.babpool.free.vo.FreeBoardVO;

@Service
public class FreeBoardSeriveImpl {

	@Inject
	IFreeBoardDao freeBoardDao;

	@Inject
	IAttachDao attachDao;

	public FreeBoardVO getBoard(int freeBoardNo) {
		FreeBoardVO freeBoard = freeBoardDao.getFreeBoard(freeBoardNo);
		if (freeBoard == null) {

		}
		List<AttachVO> attaches = attachDao.getAttachListByParent(freeBoardNo, "FREE");
		freeBoard.setAttaches(attaches);
		return freeBoard;
	}


	public void modifyBoard(FreeBoardVO freeBoard)
			throws BizNotFoundException, BizPasswordNotMatchedException, BizNotEffectedException {
		FreeBoardVO vo = freeBoardDao.getFreeBoard(freeBoard.getFreeBoardNo());
		if (vo == null)
			throw new BizNotFoundException();
		if (freeBoard.getFreeBoardPass().equals(vo.getFreeBoardPass())) {
			int cnt = freeBoardDao.updateBoard(freeBoard);
			if (cnt == 0)
				throw new BizNotEffectedException();

			// 추가될 파일들 insert
			List<AttachVO> attaches = freeBoard.getAttaches();
			System.out.println(attaches);
			if (attaches != null) {
				for (AttachVO attach : attaches) {
					attach.setAtchParentNo(freeBoard.getFreeBoardNo());
					attachDao.insertAttach(attach);
				}
			}
			// 삭제할 파일번호들 가지고 삭제, (upload된 실제파일은 건들지 않습니다. )
			int[] delAtchNos = freeBoard.getDeAttchNos();
			if (delAtchNos != null && delAtchNos.length > 0) {
				attachDao.deleteAttaches(delAtchNos);
			}
		} else {
			throw new BizPasswordNotMatchedException();
		}
	}
	
	
	
	
}
